version: '3.7'

services:

    #TRAEFIK REVERSE PROXY
    webserver:
        image:          traefik:v2.2
        container_name: traefik
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks:
            traefik:
                ipv4_address: ${TRAEFIK_SUBNET}.3
            internal:
                ipv4_address: ${INTERNAL_SUBNET}.3
        labels:
            traefik.enable:                                         true
            traefik.http.routers.airflow.rule:                      Host(`traefik.localhost`)
            traefik.http.routers.airflow.entrypoints:               web
            traefik.http.services.airflow.loadbalancer.server.port: 8080

    # BACKEND DATABASE
    database:
        image:   postgres:9.6
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - ${DOCKER_DIR}/postgres/config/data:/var/lib/postgresql/data
        logging:
            options:
                max-size: 10m
                max-file: "3"
        restart: unless-stopped
        networks:
            internal:
                ipv4_address: ${INTERNAL_SUBNET}.4

    # AIRFLOW APPLICATION
    airflow:
        image:   puckel/docker-airflow:1.10.9
        environment:
            EXECUTOR:          ${AIRFLOW_EXECUTOR}
            POSTGRES_HOST:     ${INTERNAL_SUBNET}.4
            POSTGRES_USER:     ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB:       ${POSTGRES_DB}
        volumes:
            - ${DOCKER_DIR}/:/usr/local/airflow/
        command: webserver
        logging:
            options:
                max-size: 10m
                max-file: "3"
        healthcheck:
            test: [ "CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]" ]
            interval: 30s
            timeout:  30s
            retries:  3
        depends_on:
            - database
            - webserver
        restart: unless-stopped
        labels:
            traefik.enable:                                         true
            traefik.http.routers.airflow.rule:                      Host(`airflow.localhost`)
            traefik.http.routers.airflow.entrypoints:               web
            traefik.http.services.airflow.loadbalancer.server.port: 7878
        networks:
            traefik:
                ipv4_address: ${TRAEFIK_SUBNET}.5
            internal:
                ipv4_address: ${INTERNAL_SUBNET}.5

networks:
    traefik:
        driver: bridge
        ipam:
            config:
                -   subnet: ${TRAEFIK_SUBNET}.0/24
            driver: default
    internal:
        driver: bridge
        ipam:
            config:
                -   subnet: ${INTERNAL_SUBNET}.0/24
            driver: default